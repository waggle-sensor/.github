name: "Build and Push Docker Images"

# Usage - copy into project .github/workflows/build-and-push-docker-image.yaml
#on:
#  release:
#    types: [published]
#  pull_request:
#    branches: ["main"]  <-- customize to your own repo's default branch
#
#jobs:
#  push_to_registry:
#    name: Build
#    uses: waggle-sensor/.github/.github/workflows/build-and-push-docker-image.yml@main
#    secrets: inherit
#    with:
#      platforms: "linux/amd64,linux/arm64"       <-- optional, to override default below
#      context: .                                 <-- optional, to override default below
#      image: ${{ github.event.repository.name }} <-- optional, to override default below

on:
  workflow_call:
    inputs:
      platforms:
        required: false
        type: string
        default: "linux/amd64,linux/arm64"
      context:
        required: false
        type: string
        default: .
      image:
        required: false
        type: string
        default: ${{ github.event.repository.name }}

jobs:
  build_and_push_docker_images:
    name: Build and Push Docker Images
    runs-on: ubuntu-20.04
    outputs:
      imageid: ${{ steps.build_and_push.outputs.imageid }}
      digest: ${{ steps.build_and_push.outputs.digest }}
      metadata: ${{ steps.build_and_push.outputs.metadata }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ secrets.DOCKER_ORG }}/${{ inputs.image }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/build-push-action@v5
        id: build_and_push
        with:
          context: ${{ inputs.context }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
